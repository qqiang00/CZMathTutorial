========================================================
0.5 Python基础(一) - 变量和赋值语句
========================================================

在本节中，我们将通过编写一些简单的程序来介绍Python编程世界里的一些基本概念和思维方式，希望读者能尽早地理解这些概念并开始学习使用这种思维方式来思考、解决问题。

-----------------------------
逐句解释执行Python程序
-----------------------------
在上一节中，我们编写了一个简单到只有一行代码的Python程序，我们直接在Python编程交互式界面上一行代码，按回车键后，马上就看到了程序的输出，这种逐句解释执行程序的方式是Python语言的一大特色，不过并不是所有的语言都能够做到这一点。基于这个特色，我们可以把Python当成一个计算器，在交互式界面下输入各种计算表达式后按回车键，Python会马上给出计算结果。比如说我们计算 ``(3+5) × 2 - 4`` 的值，可以直接输入这个式子。"乘号" ``×`` 在程序代码中要用“星号” ``*`` 替换而且不能省略，如下：

.. code-block:: Python

    >>>(3+5)*2-4
    12
    >>>((3+5)*2+6)/2
    11.0
    >>>3.14*10.0*10.0
    314.0
    
在要计算的式子中如果出现中括号或大括号的时候，在编写程序的时候都要换成小括号，因为在大多数计算机语言中，中括号 ``[]`` 和大括号 ``{}`` 都有其它特殊的用处，Python语言也不例外。除法计算在Python中用 ``/`` 表示，这和分式比较类似。 Python可以完成计算器所能完成的所有计算功能。

假如现在我们要根据圆的半径计算它的周长和面积，你会怎么做？加入这个元的半径是 ``15.23`` m，那么它的周长和面积又分别是多少呢？我们可以根据圆的周长和面积公式来计算。我们可以根据我们可以把python当成计算器来试一试(圆周率取 ``3.1415926``):

.. code-block:: python
    
    >>> 2 * 3.1415926 * 15.23
    95.692910596
    >>> 3.1415926 * 15.23 * 15.23
    728.70151418854
    
这样，这个圆的周长和面积分别是 ``95.692910596`` m和 ``728.70151418854`` m\ :sup:`2`。和你手工计算或者使用计算器计算得到的结果是一样的。不过如果你仅把Python当成一个计算器，那可就太大材小用了。

细心的读者可能已经发现，在运算符号两边是否留有空格好像对计算结果没有影响，确实是这样的。不过有时候为了美观以及增加阅读代码时的方便性，我们会在一些运算符的两端添加空格，不过在初学编程时，可不必纠结于此，你可以根据自己的喜好决定是否在运算符两端留有空格。

像上面那样编写计算表达式虽然得到了正确的结果，但是输入的式子比较长，特别是当半径的数值长，且对圆周率精度要求比较高的时候。那么有没有稍微简便一点呢？有。接下来我们就来看看如何来简化我们的计算表达式。

-----------------------
在代码中使用变量
-----------------------
我们发现，同样的圆周率和半径数值在计算圆周长和面积的时候都出现了至少一次，我们可不可以把半径和圆周率的数值专门存放在一个地方，并且给他们起个较短的名字，比如说分别为 ``r`` 和 ``pi``，然后用这两个名字来表达周长和面积呢？就像下面这样编写代码：

.. code-block:: python
    
    >>>pi = 3.1415926
    >>>r = 15.23
    >>>2*pi*r
    95.692910596
    >>> pi*r*r
    728.70151418854
    
这样计算是不是方便了不少呢？ 你可能还不是很理解最开始两句代码的确切含义，我们来详细解释下。 先看第一句:

.. code-block:: python
    
    >>>pi = 3.1415926
    
首先，我们和计算机之间约定了一个新的单词 ``pi`` , 这个 ``pi`` 就是一个 **标识符**，你也可以换一个名字，比如说 ``pai`` ，只要你在随后的计算过程中一直用它就可以。标识符等于是告诉自己，同时也告诉计算机，在随后的程序代码中，如果再次出现了这个标识符，都指的是同一样东西。 那这个东西是什么呢？ 对于这行语句来说，就是“等号” ``=`` 后面的圆周率近似数值 ``3.1415926`` 。你可能会问 ``=`` 前面的 ``pi`` 是2个字母，而 ``=`` 后面则是一串数字，这两个怎么可能相等呢？ 其实，这里的 ``=`` 不是指两边相等的意思，而是指把 ``=`` 右边数值赋给其左边的标识符。也就是说，在随后的代码里再出现 ``pi`` ，我们就认为它相当于 ``3.1415926`` 这一串数字。 专业术语称这句代码为 **赋值语句** ，而标识符 ``pi`` 则被称为 **变量** 。 这句代码就是把一个具体的数值赋值给一个变量，今后在没有再次赋值前，这个变量的值就是这个具体的数值。

同样的道理，第二句代码的意思就是：新（约定）建立了一个名为 ``r`` 的变量，它的具体数值为 ``15.23`` 。其实我们计划用 ``r`` 这个变量代表一个圆的半径。随后的两句代码就比较简单了：形式和计算圆周长、面积的公式一样。只不过在程序代码里，半径的平方不能写成 r\ :sup:`2` 的形式，而只能写成 r*r 的形式。

---------------------------------
小结
---------------------------------
这一节里，我们学习了：

1. Python可以作为计算器使用，Python代码可以逐行解释执行；
2. 数学课本上包含括号的加减乘除四则运算如何用计算机代码来表示，两者之间的联系和区别;
3. 什么是“变量”、“赋值语句”；等于符号 ``=`` 在代码中的意义。

我们已经学习了能够提高编程效率的最简单的技巧：“引入变量来存储数据”。不过这还远远不够，试想一下，如果我们现在要计算的不是单个圆的周长和面积，而是要计算10个、100个甚至更多的半径已知的圆的周长和面积。那程序应该怎样编写才比较方便呢？ 下一节我们将详细讲解如何编程解决这类问题。

----------------------
轮到你了
----------------------
1. 在Python编程交互式界面上计算式子 ``1+2+3+4+5+6+7+8+9+10`` 的值;
2. 一个长方形长和宽分别为 ``2.578`` m和 ``1.342`` m，编程计算它的周长和面积，你会给长方形的长和宽分别取什么变量名呢？
